import sys
#----------------------------------------------------------------------------------------------------------------------
#функция для приветсвия
def greetings():
    print("""       ___    _____     _     _  _____  _   _                                  
      (  _`\ (  _  )   ( )   ( )(  _  )( ) ( )                                 
      | | ) || ( ) |   `\`\_/'/'| ( ) || | | |                                 
      | | | )| | | |     `\ /'  | | | || | | |                                 
      | |_) || (_) |      | |   | (_) || (_) |                                 
      (____/'(_____)      (_)   (_____)(_____)                                 
                                                                               
                                                                               
 _       _  _____  _   _  _   _  _____     ___    _      _____  _     _    _   
( )  _  ( )(  _  )( ) ( )( ) ( )(  _  )   (  _`\ ( )    (  _  )( )   ( ) /'_`\ 
| | ( ) | || (_) || `\| || `\| || (_) |   | |_) )| |    | (_) |`\`\_/'/'(_) ) |
| | | | | ||  _  || , ` || , ` ||  _  |   | ,__/'| |  _ |  _  |  `\ /'     /'/'
| (_/ \_) || | | || |`\ || |`\ || | | |   | |    | |_( )| | | |   | |     |_|  
`\___x___/'(_) (_)(_) (_)(_) (_)(_) (_)   (_)    (____/'(_) (_)   (_)     (_)  
                                                                               
yes/no?""")
    response = input(" ")
    if response == 'yes':
        print("""
 _       _         _                                       _
( )  _  ( )       (_ )                                    ( )_
| | ( ) | |   __   | |    ___    _     ___ ___     __     | ,_)   _
| | | | | | /'__`\ | |  /'___) /'_`\ /' _ ` _ `\ /'__`\   | |   /'_`|
| (_/ \_) |(  ___/ | | ( (___ ( (_) )| ( ) ( ) |(  ___/   | |_ ( (_) )
 \___x___/  \____)(___) \____) \___/ (_) (_) (_) \____)    \__) \___/
  
               _    _                     _____
              ( )  ( )                   (  _  )
              `\`\/'/'    _   _   ___    | ( ) |
                >  <     ( ) ( )/',__)   | | | |
               /'/\`\    | \_/ |\__, \   | (_) |
              (_)  (_)   `\___/'(____/   (_____)
""")
    else:
        print("""
    __                                       _                  __           
   / /_  ____ __   _____     ____ _   ____  (_)_______     ____/ /___ ___  __
  / __ \/ __ `/ | / / _ \   / __ `/  / __ \/ / ___/ _ \   / __  / __ `/ / / /
 / / / / /_/ /| |/ /  __/  / /_/ /  / / / / / /__/  __/  / /_/ / /_/ / /_/ / 
/_/ /_/\__,_/ |___/\___/   \__,_/  /_/ /_/_/\___/\___/   \__,_/\__,_/\__, /  
                                                                    /____/   
""")
        sys.exit()
#----------------------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------------------
greetings()
#----------------------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------------------
field = [[" "] * 3 for i in range(3)]

def show():
    print()
    print("    | 0 | 1 | 2 | ")
    print("  --------------- ")
    for i, row in enumerate(field):
        row_str = f"  {i} | {' | '.join(row)} | "
        print(row_str)
        print("  --------------- ")
    print()


def check_winner(field):
    # Проверка по горизонтали, вертикали и диагоналям
    for i in range(3):
        if field[i][0] == field[i][1] == field[i][2] != ' ':
            return True
        if field[0][i] == field[1][i] == field[2][i] != ' ':
            return True
    if field[0][0] == field[1][1] == field[2][2] != ' ':
        return True
    if field[0][2] == field[1][1] == field[2][0] != ' ':
        return True
    return False

def is_board_full(field):
    for row in field:
        if ' ' in row:
            return False
    return True

def tic_tac_toe():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    current_player = 'X'

    while True:
        show()

        try:
            row = int(input(f"Игрок {current_player}, введите номер строки (0, 1, 2): "))
            col = int(input(f"Игрок {current_player}, введите номер столбца (0, 1, 2): "))
        except ValueError:
            print("Введите корректные числа.")
            continue

        if 0 <= row < 3 and 0 <= col < 3 and field[row][col] == ' ':
            field[row][col] = current_player
            if check_winner(field):
                show()
                print(f"Игрок {current_player} победил!")
                break
            elif is_board_full(field):
                show()
                print("Ничья!")
                break
            else:
                current_player = 'O' if current_player == 'X' else 'X'
        else:
            print("Некорректные координаты. Попробуйте еще раз.")

if __name__ == "__main__":
    tic_tac_toe()
